# Perform

1. select elements
2. Event Handling

coding 順序：

1. 頭： var def
2. 中間：fucntion def
3. wiring最後

### 使用var xxx = function(){}
目的是希望可以使用refer,而非calling function...這邊有點聽不懂

節錄字幕：
Now if you were creating a function like this, function addTask.
You may be tempted to do this, and `add.onclick= addTask()`
**that will actually call the function there and then.**
You don't want it to do that, you want it to call when the user interacts and
actually clicks on the button.


//cycle over the incompleteTasksHolder ul list items
	//for each list item
		//select its children
		//bind the editTask to edit button
		//bind the deleteTask to detele button
		//bind the taskCompleted to checkbox

//cycle over the completedTasksHolder ul list items
	//for each list item
		//select its children
		//bind the editTask to edit button
		//bind the deleteTask to detele button
		//bind the taskIncompleted to checkbox


底下的行為很相像，所以我們建立一個function




相關方法請參考MDN網站







add tesk 元件

check as complete
????


bindTaskEvents(listItem, taskCompleted);
addTask, taskCompleted, taskIncomplete




##Perfect

1. 新增完項目，原本的text box value還在
taskInput.value = "";

2. 連結到ajax

```js
addButton.onclick = addTask;
addButton.onclick = ajaxRequest;
```

這種寫法會被overwrite，改成使用eventListener

```js
var ajaxRequest = function() {
  console.log("AJAX request");
}

//Set the click handler to the addTask function
addButton.addEventListener("click", addTask);
addButton.addEventListener("click", ajaxRequest);
```js



















